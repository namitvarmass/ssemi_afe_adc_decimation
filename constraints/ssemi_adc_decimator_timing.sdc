#=============================================================================
# SSEMI ADC Decimator Timing Constraints
#=============================================================================
# Description: Comprehensive timing constraints for SSEMI ADC Decimator IP
#              Includes clock definitions, input/output delays, and exceptions
#              Optimized for 100MHz operation with 200MHz maximum capability
#
# Clock Domain Crossing (CDC):
#   - For detailed CDC constraints and synchronization requirements,
#     see ssemi_adc_decimator_cdc.sdc
#   - This design uses three clock domains: i_clk, fir_clk, halfband_clk
#   - All CDC paths require proper synchronization in RTL implementation
#
# Author:      SSEMI Development Team
# Date:        2025-08-30T18:32:01Z
# License:     Apache-2.0
#=============================================================================

#=============================================================================
# Clock Definitions
#=============================================================================

# Primary clock (100MHz typical, 200MHz maximum)
create_clock -name i_clk -period 10.0 [get_ports i_clk]
set_clock_uncertainty 0.1 [get_clocks i_clk]

# Derived clocks (generated by clock dividers)
create_generated_clock -name fir_clk -source [get_ports i_clk] -multiply_by 1 -divide_by 2 [get_pins */u_fir_clock_div/o_clk_div]
create_generated_clock -name halfband_clk -source [get_pins */u_fir_clock_div/o_clk_div] -multiply_by 1 -divide_by 2 [get_pins */u_halfband_clock_div/o_clk_div]

# Clock groups for multi-cycle paths
set_clock_groups -asynchronous -group {i_clk} -group {fir_clk} -group {halfband_clk}

#=============================================================================
# Input Constraints
#=============================================================================

# Input setup and hold times
set_input_delay -clock i_clk -max 2.0 [get_ports i_*]
set_input_delay -clock i_clk -min 1.0 [get_ports i_*]

# Reset timing
set_input_delay -clock i_clk -max 1.0 [get_ports i_rst_n]
set_input_delay -clock i_clk -min 0.5 [get_ports i_rst_n]

# Data input timing
set_input_delay -clock i_clk -max 2.0 [get_ports i_data*]
set_input_delay -clock i_clk -min 1.0 [get_ports i_data*]

# Control input timing
set_input_delay -clock i_clk -max 2.0 [get_ports i_enable i_valid i_ready]
set_input_delay -clock i_clk -min 1.0 [get_ports i_enable i_valid i_ready]

# CSR interface timing
set_input_delay -clock i_clk -max 2.0 [get_ports i_csr_*]
set_input_delay -clock i_clk -min 1.0 [get_ports i_csr_*]

#=============================================================================
# Output Constraints
#=============================================================================

# Output delay constraints
set_output_delay -clock i_clk -max 8.0 [get_ports o_*]
set_output_delay -clock i_clk -min 2.0 [get_ports o_*]

# Data output timing
set_output_delay -clock i_clk -max 8.0 [get_ports o_data*]
set_output_delay -clock i_clk -min 2.0 [get_ports o_data*]

# Control output timing
set_output_delay -clock i_clk -max 8.0 [get_ports o_valid o_ready o_busy o_error]
set_output_delay -clock i_clk -min 2.0 [get_ports o_valid o_ready o_busy o_error]

# CSR output timing
set_output_delay -clock i_clk -max 8.0 [get_ports o_csr_*]
set_output_delay -clock i_clk -min 2.0 [get_ports o_csr_*]

# Status output timing
set_output_delay -clock i_clk -max 8.0 [get_ports o_*_status]
set_output_delay -clock i_clk -min 2.0 [get_ports o_*_status]

#=============================================================================
# Multi-Cycle Paths
#=============================================================================

# CIC filter decimation paths (multi-cycle due to decimation)
set_multicycle_path -setup 2 -from [get_clocks i_clk] -to [get_clocks i_clk] -through [get_pins */u_cic_filter/*]
set_multicycle_path -hold 1 -from [get_clocks i_clk] -to [get_clocks i_clk] -through [get_pins */u_cic_filter/*]

# FIR filter pipeline paths
set_multicycle_path -setup 2 -from [get_clocks fir_clk] -to [get_clocks fir_clk] -through [get_pins */u_fir_filter/*]
set_multicycle_path -hold 1 -from [get_clocks fir_clk] -to [get_clocks fir_clk] -through [get_pins */u_fir_filter/*]

# Halfband filter decimation paths
set_multicycle_path -setup 2 -from [get_clocks halfband_clk] -to [get_clocks halfband_clk] -through [get_pins */u_halfband_filter/*]
set_multicycle_path -hold 1 -from [get_clocks halfband_clk] -to [get_clocks halfband_clk] -through [get_pins */u_halfband_filter/*]

#=============================================================================
# False Paths
#=============================================================================

# Reset paths (asynchronous reset)
set_false_path -from [get_ports i_rst_n]

# Clock divider control paths
set_false_path -from [get_pins */u_fir_clock_div/i_enable]
set_false_path -from [get_pins */u_halfband_clock_div/i_enable]

# CSR coefficient update paths (combinational)
set_false_path -from [get_pins */u_config_status_regs/i_csr_wr_data] -to [get_pins */u_config_status_regs/o_fir_coeff*]
set_false_path -from [get_pins */u_config_status_regs/i_csr_wr_data] -to [get_pins */u_config_status_regs/o_halfband_coeff*]

# Status monitoring paths (combinational)
set_false_path -from [get_pins */u_config_status_regs/i_*_valid] -to [get_pins */u_config_status_regs/o_busy]
set_false_path -from [get_pins */u_config_status_regs/i_*_overflow] -to [get_pins */u_config_status_regs/o_error]

#=============================================================================
# Clock Domain Crossing
#=============================================================================

# CIC to FIR clock domain crossing
set_false_path -from [get_clocks i_clk] -to [get_clocks fir_clk]
set_false_path -from [get_clocks fir_clk] -to [get_clocks i_clk]

# FIR to Halfband clock domain crossing
set_false_path -from [get_clocks fir_clk] -to [get_clocks halfband_clk]
set_false_path -from [get_clocks halfband_clk] -to [get_clocks fir_clk]

#=============================================================================
# Load Constraints
#=============================================================================

# Output load constraints
set_load 10 [get_ports o_*]
set_load 20 [get_ports o_data*]  # Higher load for data outputs

#=============================================================================
# Area and Power Constraints
#=============================================================================

# Area constraints
set_max_area 0

# Power constraints
set_max_dynamic_power 100mW
set_max_leakage_power 10mW

#=============================================================================
# Operating Conditions
#=============================================================================

# Process corner
set_operating_conditions -library typical

# Temperature and voltage
set_temperature 25
set_voltage 1.0 -object_list VDD
set_voltage 0.0 -object_list VSS

#=============================================================================
# Design Rules
#=============================================================================

# Maximum fanout
set_max_fanout 20 [current_design]

# Maximum transition
set_max_transition 1.0 [current_design]

#=============================================================================
# End of Timing Constraints
#=============================================================================
