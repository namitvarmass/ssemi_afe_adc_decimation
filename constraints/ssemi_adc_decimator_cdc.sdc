#==============================================================================
# Clock Domain Crossing Constraints for ssemi_adc_decimator_sys_top
#==============================================================================
# Description: Clock domain crossing constraints and documentation for the
#              multi-clock ADC decimator system. This file defines CDC paths,
#              synchronization requirements, and timing exceptions.
#
# Clock Domains:
#   - i_clk: Main system clock (100MHz max)
#   - fir_clk: FIR filter clock (i_clk / DECIMATION_FACTOR)
#   - halfband_clk: Halfband filter clock (fir_clk / 2)
#
# CDC Paths:
#   - CSR interface: i_clk domain
#   - CIC to FIR: i_clk to fir_clk
#   - FIR to Halfband: fir_clk to halfband_clk
#   - Status signals: All domains to i_clk
#
# Author: Vyges AI Assistant
# Date: 2025-08-30T18:32:01Z
#==============================================================================

#==============================================================================
# Clock Definitions
#==============================================================================

# Main system clock
create_clock -name i_clk -period 10.0 [get_ports i_clk]

# Derived clocks (generated by clock dividers)
create_generated_clock -name fir_clk -source [get_ports i_clk] -divide_by $DECIMATION_FACTOR [get_pins */fir_clock_div/div_clk_reg/Q]
create_generated_clock -name halfband_clk -source [get_pins */fir_clock_div/div_clk_reg/Q] -divide_by 2 [get_pins */halfband_clock_div/div_clk_reg/Q]

#==============================================================================
# Clock Domain Groups
#==============================================================================

set_clock_groups -asynchronous \
    -group {i_clk} \
    -group {fir_clk} \
    -group {halfband_clk}

#==============================================================================
# CDC Path Definitions
#==============================================================================

# CIC to FIR CDC path
set_false_path -from [get_clocks i_clk] -to [get_clocks fir_clk] \
    -through [get_pins */cic_filter/o_data*] \
    -through [get_pins */fir_filter/i_data*]

# FIR to Halfband CDC path  
set_false_path -from [get_clocks fir_clk] -to [get_clocks halfband_clk] \
    -through [get_pins */fir_filter/o_data*] \
    -through [get_pins */halfband_filter/i_data*]

# Status signals CDC paths (all domains to i_clk)
set_false_path -from [get_clocks fir_clk] -to [get_clocks i_clk] \
    -through [get_pins */fir_filter/o_overflow] \
    -through [get_pins */fir_filter/o_underflow]

set_false_path -from [get_clocks halfband_clk] -to [get_clocks i_clk] \
    -through [get_pins */halfband_filter/o_overflow] \
    -through [get_pins */halfband_filter/o_underflow]

#==============================================================================
# CDC Synchronization Requirements
#==============================================================================

# CSR interface is synchronous to i_clk (no CDC needed)
set_input_delay -clock i_clk -max 2.0 [get_ports i_csr_*]
set_output_delay -clock i_clk -max 2.0 [get_ports o_csr_*]

# Data input is synchronous to i_clk
set_input_delay -clock i_clk -max 2.0 [get_ports i_data]

# Data output is synchronous to halfband_clk
set_output_delay -clock halfband_clk -max 2.0 [get_ports o_data]

# Error interrupt is synchronous to i_clk
set_output_delay -clock i_clk -max 2.0 [get_ports o_error]

#==============================================================================
# CDC Synchronization Cell Requirements
#==============================================================================

# Note: The following paths require proper CDC synchronization cells
# in the RTL implementation. These are marked as false paths for timing
# analysis but must be properly synchronized in the design.

# CIC to FIR data transfer
set_false_path -from [get_clocks i_clk] -to [get_clocks fir_clk] \
    -through [get_pins */cic_to_fir_sync*]

# FIR to Halfband data transfer
set_false_path -from [get_clocks fir_clk] -to [get_clocks halfband_clk] \
    -through [get_pins */fir_to_halfband_sync*]

# Status signal synchronization
set_false_path -from [get_clocks fir_clk] -to [get_clocks i_clk] \
    -through [get_pins */status_sync*]

set_false_path -from [get_clocks halfband_clk] -to [get_clocks i_clk] \
    -through [get_pins */status_sync*]

#==============================================================================
# CDC Verification Guidelines
#==============================================================================

# The following guidelines must be followed for CDC verification:

# 1. All CDC paths must use proper synchronization cells (2-FF synchronizer)
# 2. Control signals crossing clock domains must be synchronized
# 3. Data signals crossing clock domains must use handshake or FIFO protocols
# 4. Status signals must be synchronized before being read by CSR interface
# 5. Clock domain crossing must be verified using CDC analysis tools

#==============================================================================
# CDC Implementation Notes
#==============================================================================

# Current CDC Implementation:
# - CIC to FIR: Direct connection (requires synchronization in RTL)
# - FIR to Halfband: Direct connection (requires synchronization in RTL)  
# - Status signals: Direct connection to CSR (requires synchronization in RTL)
# - CSR interface: Synchronous to i_clk (no CDC required)

# Recommended CDC Improvements:
# 1. Add 2-FF synchronizers for all CDC paths
# 2. Implement handshake protocols for data transfers
# 3. Add CDC verification assertions
# 4. Use gray code counters for status signals
# 5. Add metastability protection for all CDC paths
